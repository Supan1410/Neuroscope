import numpy as np
d =np.loadtxt("framingham.csv",delimiter= ",",dtype= str) 
d= d[~np.any(d=="NA",axis=1)]

x= d[1:,:-1]

y= d[1:,-1]
y=y.reshape(-1,1)
y= y.astype(float)
w= np.zeros(x.shape[1]) 
wc=w.copy()
m= x.shape[0]
conw=0.0001
cw=np.ones(x.shape[1])
conb=0.0001
cb=1
alpha=0.1
b=0
bc=b
x = x.astype(float)
x=x/np.nanmax(x,axis=0) #resacling the data
iter=500
count=0

while(iter>0):
    l= np.dot(x,wc)+bc
    fx= 1/(1+np.exp(-l))
    fx= fx.reshape(-1,1)
    
    t1= alpha*(fx-y)
    t=np.nansum(t1*x,axis=0)
    w=w-t/m
    
    b= b- np.nansum(t1)/m
    
    cw= np.abs(w-wc)
    
    cb=np.abs(b-bc)
  
    wc=w.copy()
    bc=b
    iter=iter-1

def predict(x):
    l= np.dot(x,w)+b
    return 1 if l>=-1 else 0
for i in range(0,x.shape[0]):
   
    if predict(x[i])==y[i]:
        count=count+1
print(count*100/m)

